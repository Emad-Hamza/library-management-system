# Generated by Django 5.1.11 on 2025-06-12 22:48

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Died')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Brief description of the book')),
                ('isbn', models.CharField(max_length=13, unique=True, verbose_name='ISBN')),
                ('language', models.CharField(blank=True, help_text='e.g. English, French', max_length=100)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='app.author')),
                ('categories', models.ManyToManyField(blank=True, related_name='books', to='app.category')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.publisher')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('imprint', models.CharField(help_text='Publisher imprint info', max_length=200)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('a', 'Available'), ('o', 'On loan'), ('r', 'Reserved'), ('m', 'Maintenance')], default='a', help_text='Book availability', max_length=1)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='copies', to='app.book')),
            ],
            options={
                'ordering': ['book__title', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('penalty_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Accumulated penalties not yet paid/waived', max_digits=8)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loaned_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_back', models.DateTimeField(help_text='When the copy should be returned')),
                ('returned_on', models.DateTimeField(blank=True, null=True)),
                ('book_copy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loans', to='app.bookcopy')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['due_back'],
                'unique_together': {('book_copy', 'returned_on')},
            },
        ),
    ]
